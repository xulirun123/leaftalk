#!/usr/bin/env node

/**
 * Ê£ÄÊü•Ë°®ÁªìÊûÑÔºåÁâπÂà´ÊòØ friend_requests Ë°®
 */

const mysql = require('mysql2/promise')

const dbConfig = {
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || 'password',
    database: process.env.DB_NAME || 'leaftalk-new',
    charset: 'utf8mb4'
}

async function checkTableStructure() {
    let connection

    try {
        console.log('üîç Ê£ÄÊü•Ë°®ÁªìÊûÑ...')
        connection = await mysql.createConnection(dbConfig)

        // Ê£ÄÊü• friend_requests Ë°®ÁªìÊûÑ
        console.log('\nüìä friend_requests Ë°®ÁªìÊûÑ:')
        const [columns] = await connection.query('DESCRIBE friend_requests')
        columns.forEach(col => {
            console.log(`  ${col.Field} - ${col.Type} - ${col.Null} - ${col.Key} - ${col.Default}`)
        })

        // Ê£ÄÊü•Ë°®‰∏≠ÁöÑÊï∞ÊçÆ
        console.log('\nüìä friend_requests Ë°®Êï∞ÊçÆ:')
        const [data] = await connection.query('SELECT * FROM friend_requests LIMIT 5')
        console.log('Êï∞ÊçÆÊù°Êï∞:', data.length)
        if (data.length > 0) {
            console.log('Â≠óÊÆµÂêç:', Object.keys(data[0]))
            data.forEach((row, index) => {
                console.log(`  ËÆ∞ÂΩï ${index + 1}:`, row)
            })
        }

        // Ê£ÄÊü• contacts Ë°®ÁªìÊûÑ
        console.log('\nüìä contacts Ë°®ÁªìÊûÑ:')
        const [contactColumns] = await connection.query('DESCRIBE contacts')
        contactColumns.forEach(col => {
            console.log(`  ${col.Field} - ${col.Type} - ${col.Null} - ${col.Key} - ${col.Default}`)
        })

        // Ê£ÄÊü• users Ë°®ÁªìÊûÑ
        console.log('\nüìä users Ë°®ÁªìÊûÑ:')
        const [userColumns] = await connection.query('DESCRIBE users')
        userColumns.forEach(col => {
            console.log(`  ${col.Field} - ${col.Type} - ${col.Null} - ${col.Key} - ${col.Default}`)
        })

    } catch (error) {
        console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error.message)
        throw error
    } finally {
        if (connection) {
            await connection.end()
        }
    }
}

async function main() {
    try {
        await checkTableStructure()
    } catch (error) {
        console.error('üí• Êìç‰ΩúÂ§±Ë¥•:', error.message)
        process.exit(1)
    }
}

if (require.main === module) {
    main()
}

module.exports = { checkTableStructure }
